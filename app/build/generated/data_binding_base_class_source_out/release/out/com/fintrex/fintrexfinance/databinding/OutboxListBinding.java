// Generated by view binder compiler. Do not edit!
package com.fintrex.fintrexfinance.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.fintrex.fintrexfinance.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class OutboxListBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout expandmsg;

  @NonNull
  public final TextView mail;

  @NonNull
  public final TextView mailDate;

  @NonNull
  public final TextView mailType;

  @NonNull
  public final LinearLayout msglinear;

  private OutboxListBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout expandmsg,
      @NonNull TextView mail, @NonNull TextView mailDate, @NonNull TextView mailType,
      @NonNull LinearLayout msglinear) {
    this.rootView = rootView;
    this.expandmsg = expandmsg;
    this.mail = mail;
    this.mailDate = mailDate;
    this.mailType = mailType;
    this.msglinear = msglinear;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static OutboxListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static OutboxListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.outbox_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static OutboxListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.expandmsg;
      LinearLayout expandmsg = rootView.findViewById(id);
      if (expandmsg == null) {
        break missingId;
      }

      id = R.id.mail;
      TextView mail = rootView.findViewById(id);
      if (mail == null) {
        break missingId;
      }

      id = R.id.mailDate;
      TextView mailDate = rootView.findViewById(id);
      if (mailDate == null) {
        break missingId;
      }

      id = R.id.mailType;
      TextView mailType = rootView.findViewById(id);
      if (mailType == null) {
        break missingId;
      }

      id = R.id.msglinear;
      LinearLayout msglinear = rootView.findViewById(id);
      if (msglinear == null) {
        break missingId;
      }

      return new OutboxListBinding((LinearLayout) rootView, expandmsg, mail, mailDate, mailType,
          msglinear);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
