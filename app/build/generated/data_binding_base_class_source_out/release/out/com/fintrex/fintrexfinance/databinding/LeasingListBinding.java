// Generated by view binder compiler. Do not edit!
package com.fintrex.fintrexfinance.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.fintrex.fintrexfinance.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LeasingListBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ConstraintLayout expandableLayout;

  @NonNull
  public final RelativeLayout leasemore;

  @NonNull
  public final LinearLayout linear1;

  @NonNull
  public final LinearLayout linear10;

  @NonNull
  public final LinearLayout linear11;

  @NonNull
  public final LinearLayout linear12;

  @NonNull
  public final LinearLayout linear13;

  @NonNull
  public final LinearLayout linear14;

  @NonNull
  public final LinearLayout linear2;

  @NonNull
  public final LinearLayout linear5;

  @NonNull
  public final LinearLayout linear7;

  @NonNull
  public final LinearLayout linear8;

  @NonNull
  public final TextView topicLeaseInsurance;

  @NonNull
  public final TextView topicLeaseInsuranceCompany;

  @NonNull
  public final TextView topicLeaseLastPay;

  @NonNull
  public final TextView topicLeaseLastPayDate;

  @NonNull
  public final TextView topicLeaseMaturity;

  @NonNull
  public final TextView topicLeaseNo;

  @NonNull
  public final TextView topicLeaseOutstanding;

  @NonNull
  public final TextView topicLeaseRentalAmt;

  @NonNull
  public final TextView topicLeaseVehicle;

  @NonNull
  public final TextView topicNextPay;

  @NonNull
  public final TextView valueLeaseInsurance;

  @NonNull
  public final TextView valueLeaseInsuranceCompany;

  @NonNull
  public final TextView valueLeaseLastPay;

  @NonNull
  public final TextView valueLeaseLastPayDate;

  @NonNull
  public final TextView valueLeaseMaturity;

  @NonNull
  public final TextView valueLeaseNo;

  @NonNull
  public final TextView valueLeaseOutstanding;

  @NonNull
  public final TextView valueLeaseRentalAmt;

  @NonNull
  public final TextView valueLeaseVehicle;

  @NonNull
  public final TextView valueNextPay;

  private LeasingListBinding(@NonNull LinearLayout rootView,
      @NonNull ConstraintLayout expandableLayout, @NonNull RelativeLayout leasemore,
      @NonNull LinearLayout linear1, @NonNull LinearLayout linear10, @NonNull LinearLayout linear11,
      @NonNull LinearLayout linear12, @NonNull LinearLayout linear13,
      @NonNull LinearLayout linear14, @NonNull LinearLayout linear2, @NonNull LinearLayout linear5,
      @NonNull LinearLayout linear7, @NonNull LinearLayout linear8,
      @NonNull TextView topicLeaseInsurance, @NonNull TextView topicLeaseInsuranceCompany,
      @NonNull TextView topicLeaseLastPay, @NonNull TextView topicLeaseLastPayDate,
      @NonNull TextView topicLeaseMaturity, @NonNull TextView topicLeaseNo,
      @NonNull TextView topicLeaseOutstanding, @NonNull TextView topicLeaseRentalAmt,
      @NonNull TextView topicLeaseVehicle, @NonNull TextView topicNextPay,
      @NonNull TextView valueLeaseInsurance, @NonNull TextView valueLeaseInsuranceCompany,
      @NonNull TextView valueLeaseLastPay, @NonNull TextView valueLeaseLastPayDate,
      @NonNull TextView valueLeaseMaturity, @NonNull TextView valueLeaseNo,
      @NonNull TextView valueLeaseOutstanding, @NonNull TextView valueLeaseRentalAmt,
      @NonNull TextView valueLeaseVehicle, @NonNull TextView valueNextPay) {
    this.rootView = rootView;
    this.expandableLayout = expandableLayout;
    this.leasemore = leasemore;
    this.linear1 = linear1;
    this.linear10 = linear10;
    this.linear11 = linear11;
    this.linear12 = linear12;
    this.linear13 = linear13;
    this.linear14 = linear14;
    this.linear2 = linear2;
    this.linear5 = linear5;
    this.linear7 = linear7;
    this.linear8 = linear8;
    this.topicLeaseInsurance = topicLeaseInsurance;
    this.topicLeaseInsuranceCompany = topicLeaseInsuranceCompany;
    this.topicLeaseLastPay = topicLeaseLastPay;
    this.topicLeaseLastPayDate = topicLeaseLastPayDate;
    this.topicLeaseMaturity = topicLeaseMaturity;
    this.topicLeaseNo = topicLeaseNo;
    this.topicLeaseOutstanding = topicLeaseOutstanding;
    this.topicLeaseRentalAmt = topicLeaseRentalAmt;
    this.topicLeaseVehicle = topicLeaseVehicle;
    this.topicNextPay = topicNextPay;
    this.valueLeaseInsurance = valueLeaseInsurance;
    this.valueLeaseInsuranceCompany = valueLeaseInsuranceCompany;
    this.valueLeaseLastPay = valueLeaseLastPay;
    this.valueLeaseLastPayDate = valueLeaseLastPayDate;
    this.valueLeaseMaturity = valueLeaseMaturity;
    this.valueLeaseNo = valueLeaseNo;
    this.valueLeaseOutstanding = valueLeaseOutstanding;
    this.valueLeaseRentalAmt = valueLeaseRentalAmt;
    this.valueLeaseVehicle = valueLeaseVehicle;
    this.valueNextPay = valueNextPay;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LeasingListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LeasingListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.leasing_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LeasingListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.expandableLayout;
      ConstraintLayout expandableLayout = rootView.findViewById(id);
      if (expandableLayout == null) {
        break missingId;
      }

      id = R.id.leasemore;
      RelativeLayout leasemore = rootView.findViewById(id);
      if (leasemore == null) {
        break missingId;
      }

      id = R.id.linear1;
      LinearLayout linear1 = rootView.findViewById(id);
      if (linear1 == null) {
        break missingId;
      }

      id = R.id.linear10;
      LinearLayout linear10 = rootView.findViewById(id);
      if (linear10 == null) {
        break missingId;
      }

      id = R.id.linear11;
      LinearLayout linear11 = rootView.findViewById(id);
      if (linear11 == null) {
        break missingId;
      }

      id = R.id.linear12;
      LinearLayout linear12 = rootView.findViewById(id);
      if (linear12 == null) {
        break missingId;
      }

      id = R.id.linear13;
      LinearLayout linear13 = rootView.findViewById(id);
      if (linear13 == null) {
        break missingId;
      }

      id = R.id.linear14;
      LinearLayout linear14 = rootView.findViewById(id);
      if (linear14 == null) {
        break missingId;
      }

      id = R.id.linear2;
      LinearLayout linear2 = rootView.findViewById(id);
      if (linear2 == null) {
        break missingId;
      }

      id = R.id.linear5;
      LinearLayout linear5 = rootView.findViewById(id);
      if (linear5 == null) {
        break missingId;
      }

      id = R.id.linear7;
      LinearLayout linear7 = rootView.findViewById(id);
      if (linear7 == null) {
        break missingId;
      }

      id = R.id.linear8;
      LinearLayout linear8 = rootView.findViewById(id);
      if (linear8 == null) {
        break missingId;
      }

      id = R.id.topicLeaseInsurance;
      TextView topicLeaseInsurance = rootView.findViewById(id);
      if (topicLeaseInsurance == null) {
        break missingId;
      }

      id = R.id.topicLeaseInsuranceCompany;
      TextView topicLeaseInsuranceCompany = rootView.findViewById(id);
      if (topicLeaseInsuranceCompany == null) {
        break missingId;
      }

      id = R.id.topicLeaseLastPay;
      TextView topicLeaseLastPay = rootView.findViewById(id);
      if (topicLeaseLastPay == null) {
        break missingId;
      }

      id = R.id.topicLeaseLastPayDate;
      TextView topicLeaseLastPayDate = rootView.findViewById(id);
      if (topicLeaseLastPayDate == null) {
        break missingId;
      }

      id = R.id.topicLeaseMaturity;
      TextView topicLeaseMaturity = rootView.findViewById(id);
      if (topicLeaseMaturity == null) {
        break missingId;
      }

      id = R.id.topicLeaseNo;
      TextView topicLeaseNo = rootView.findViewById(id);
      if (topicLeaseNo == null) {
        break missingId;
      }

      id = R.id.topicLeaseOutstanding;
      TextView topicLeaseOutstanding = rootView.findViewById(id);
      if (topicLeaseOutstanding == null) {
        break missingId;
      }

      id = R.id.topicLeaseRentalAmt;
      TextView topicLeaseRentalAmt = rootView.findViewById(id);
      if (topicLeaseRentalAmt == null) {
        break missingId;
      }

      id = R.id.topicLeaseVehicle;
      TextView topicLeaseVehicle = rootView.findViewById(id);
      if (topicLeaseVehicle == null) {
        break missingId;
      }

      id = R.id.topicNextPay;
      TextView topicNextPay = rootView.findViewById(id);
      if (topicNextPay == null) {
        break missingId;
      }

      id = R.id.valueLeaseInsurance;
      TextView valueLeaseInsurance = rootView.findViewById(id);
      if (valueLeaseInsurance == null) {
        break missingId;
      }

      id = R.id.valueLeaseInsuranceCompany;
      TextView valueLeaseInsuranceCompany = rootView.findViewById(id);
      if (valueLeaseInsuranceCompany == null) {
        break missingId;
      }

      id = R.id.valueLeaseLastPay;
      TextView valueLeaseLastPay = rootView.findViewById(id);
      if (valueLeaseLastPay == null) {
        break missingId;
      }

      id = R.id.valueLeaseLastPayDate;
      TextView valueLeaseLastPayDate = rootView.findViewById(id);
      if (valueLeaseLastPayDate == null) {
        break missingId;
      }

      id = R.id.valueLeaseMaturity;
      TextView valueLeaseMaturity = rootView.findViewById(id);
      if (valueLeaseMaturity == null) {
        break missingId;
      }

      id = R.id.valueLeaseNo;
      TextView valueLeaseNo = rootView.findViewById(id);
      if (valueLeaseNo == null) {
        break missingId;
      }

      id = R.id.valueLeaseOutstanding;
      TextView valueLeaseOutstanding = rootView.findViewById(id);
      if (valueLeaseOutstanding == null) {
        break missingId;
      }

      id = R.id.valueLeaseRentalAmt;
      TextView valueLeaseRentalAmt = rootView.findViewById(id);
      if (valueLeaseRentalAmt == null) {
        break missingId;
      }

      id = R.id.valueLeaseVehicle;
      TextView valueLeaseVehicle = rootView.findViewById(id);
      if (valueLeaseVehicle == null) {
        break missingId;
      }

      id = R.id.valueNextPay;
      TextView valueNextPay = rootView.findViewById(id);
      if (valueNextPay == null) {
        break missingId;
      }

      return new LeasingListBinding((LinearLayout) rootView, expandableLayout, leasemore, linear1,
          linear10, linear11, linear12, linear13, linear14, linear2, linear5, linear7, linear8,
          topicLeaseInsurance, topicLeaseInsuranceCompany, topicLeaseLastPay, topicLeaseLastPayDate,
          topicLeaseMaturity, topicLeaseNo, topicLeaseOutstanding, topicLeaseRentalAmt,
          topicLeaseVehicle, topicNextPay, valueLeaseInsurance, valueLeaseInsuranceCompany,
          valueLeaseLastPay, valueLeaseLastPayDate, valueLeaseMaturity, valueLeaseNo,
          valueLeaseOutstanding, valueLeaseRentalAmt, valueLeaseVehicle, valueNextPay);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
