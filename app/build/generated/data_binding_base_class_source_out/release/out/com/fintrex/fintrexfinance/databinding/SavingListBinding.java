// Generated by view binder compiler. Do not edit!
package com.fintrex.fintrexfinance.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.fintrex.fintrexfinance.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SavingListBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout linear1;

  @NonNull
  public final LinearLayout linear2;

  @NonNull
  public final LinearLayout linear3;

  @NonNull
  public final RelativeLayout savemore;

  @NonNull
  public final ConstraintLayout savexpandableLayout;

  @NonNull
  public final TextView topicSavBalance;

  @NonNull
  public final TextView topicSavNo;

  @NonNull
  public final TextView topicSavType;

  @NonNull
  public final TextView valueSavBalance;

  @NonNull
  public final TextView valueSavNo;

  @NonNull
  public final TextView valueSavType;

  private SavingListBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout linear1,
      @NonNull LinearLayout linear2, @NonNull LinearLayout linear3,
      @NonNull RelativeLayout savemore, @NonNull ConstraintLayout savexpandableLayout,
      @NonNull TextView topicSavBalance, @NonNull TextView topicSavNo,
      @NonNull TextView topicSavType, @NonNull TextView valueSavBalance,
      @NonNull TextView valueSavNo, @NonNull TextView valueSavType) {
    this.rootView = rootView;
    this.linear1 = linear1;
    this.linear2 = linear2;
    this.linear3 = linear3;
    this.savemore = savemore;
    this.savexpandableLayout = savexpandableLayout;
    this.topicSavBalance = topicSavBalance;
    this.topicSavNo = topicSavNo;
    this.topicSavType = topicSavType;
    this.valueSavBalance = valueSavBalance;
    this.valueSavNo = valueSavNo;
    this.valueSavType = valueSavType;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SavingListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SavingListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.saving_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SavingListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.linear1;
      LinearLayout linear1 = rootView.findViewById(id);
      if (linear1 == null) {
        break missingId;
      }

      id = R.id.linear2;
      LinearLayout linear2 = rootView.findViewById(id);
      if (linear2 == null) {
        break missingId;
      }

      id = R.id.linear3;
      LinearLayout linear3 = rootView.findViewById(id);
      if (linear3 == null) {
        break missingId;
      }

      id = R.id.savemore;
      RelativeLayout savemore = rootView.findViewById(id);
      if (savemore == null) {
        break missingId;
      }

      id = R.id.savexpandableLayout;
      ConstraintLayout savexpandableLayout = rootView.findViewById(id);
      if (savexpandableLayout == null) {
        break missingId;
      }

      id = R.id.topicSavBalance;
      TextView topicSavBalance = rootView.findViewById(id);
      if (topicSavBalance == null) {
        break missingId;
      }

      id = R.id.topicSavNo;
      TextView topicSavNo = rootView.findViewById(id);
      if (topicSavNo == null) {
        break missingId;
      }

      id = R.id.topicSavType;
      TextView topicSavType = rootView.findViewById(id);
      if (topicSavType == null) {
        break missingId;
      }

      id = R.id.valueSavBalance;
      TextView valueSavBalance = rootView.findViewById(id);
      if (valueSavBalance == null) {
        break missingId;
      }

      id = R.id.valueSavNo;
      TextView valueSavNo = rootView.findViewById(id);
      if (valueSavNo == null) {
        break missingId;
      }

      id = R.id.valueSavType;
      TextView valueSavType = rootView.findViewById(id);
      if (valueSavType == null) {
        break missingId;
      }

      return new SavingListBinding((LinearLayout) rootView, linear1, linear2, linear3, savemore,
          savexpandableLayout, topicSavBalance, topicSavNo, topicSavType, valueSavBalance,
          valueSavNo, valueSavType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
