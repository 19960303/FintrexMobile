// Generated by view binder compiler. Do not edit!
package com.fintrex.fintrexfinance.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.fintrex.fintrexfinance.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LoanListBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout linear1;

  @NonNull
  public final LinearLayout linear2;

  @NonNull
  public final LinearLayout linear4;

  @NonNull
  public final LinearLayout linear5;

  @NonNull
  public final LinearLayout linear6;

  @NonNull
  public final LinearLayout linear7;

  @NonNull
  public final LinearLayout linear8;

  @NonNull
  public final LinearLayout linear9;

  @NonNull
  public final ConstraintLayout loanexpandableLayout;

  @NonNull
  public final RelativeLayout loanmore;

  @NonNull
  public final TextView textLoanNo;

  @NonNull
  public final TextView topicLoanAmount;

  @NonNull
  public final TextView topicLoanDue;

  @NonNull
  public final TextView topicLoanInstallment;

  @NonNull
  public final TextView topicLoanLastPayDate;

  @NonNull
  public final TextView topicLoanLastPayment;

  @NonNull
  public final TextView topicLoanMaturity;

  @NonNull
  public final TextView topicLoanNo;

  @NonNull
  public final TextView topicLoanOutstanding;

  @NonNull
  public final TextView valueLoanInstallment;

  @NonNull
  public final TextView valueLoanLastPayDate;

  @NonNull
  public final TextView valueLoanLastPayment;

  @NonNull
  public final TextView valueLoanMaturity;

  @NonNull
  public final TextView valueLoanOutstanding;

  @NonNull
  public final TextView valueloanAmount;

  @NonNull
  public final TextView valueloanDue;

  private LoanListBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout linear1,
      @NonNull LinearLayout linear2, @NonNull LinearLayout linear4, @NonNull LinearLayout linear5,
      @NonNull LinearLayout linear6, @NonNull LinearLayout linear7, @NonNull LinearLayout linear8,
      @NonNull LinearLayout linear9, @NonNull ConstraintLayout loanexpandableLayout,
      @NonNull RelativeLayout loanmore, @NonNull TextView textLoanNo,
      @NonNull TextView topicLoanAmount, @NonNull TextView topicLoanDue,
      @NonNull TextView topicLoanInstallment, @NonNull TextView topicLoanLastPayDate,
      @NonNull TextView topicLoanLastPayment, @NonNull TextView topicLoanMaturity,
      @NonNull TextView topicLoanNo, @NonNull TextView topicLoanOutstanding,
      @NonNull TextView valueLoanInstallment, @NonNull TextView valueLoanLastPayDate,
      @NonNull TextView valueLoanLastPayment, @NonNull TextView valueLoanMaturity,
      @NonNull TextView valueLoanOutstanding, @NonNull TextView valueloanAmount,
      @NonNull TextView valueloanDue) {
    this.rootView = rootView;
    this.linear1 = linear1;
    this.linear2 = linear2;
    this.linear4 = linear4;
    this.linear5 = linear5;
    this.linear6 = linear6;
    this.linear7 = linear7;
    this.linear8 = linear8;
    this.linear9 = linear9;
    this.loanexpandableLayout = loanexpandableLayout;
    this.loanmore = loanmore;
    this.textLoanNo = textLoanNo;
    this.topicLoanAmount = topicLoanAmount;
    this.topicLoanDue = topicLoanDue;
    this.topicLoanInstallment = topicLoanInstallment;
    this.topicLoanLastPayDate = topicLoanLastPayDate;
    this.topicLoanLastPayment = topicLoanLastPayment;
    this.topicLoanMaturity = topicLoanMaturity;
    this.topicLoanNo = topicLoanNo;
    this.topicLoanOutstanding = topicLoanOutstanding;
    this.valueLoanInstallment = valueLoanInstallment;
    this.valueLoanLastPayDate = valueLoanLastPayDate;
    this.valueLoanLastPayment = valueLoanLastPayment;
    this.valueLoanMaturity = valueLoanMaturity;
    this.valueLoanOutstanding = valueLoanOutstanding;
    this.valueloanAmount = valueloanAmount;
    this.valueloanDue = valueloanDue;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LoanListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LoanListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.loan_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LoanListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.linear1;
      LinearLayout linear1 = rootView.findViewById(id);
      if (linear1 == null) {
        break missingId;
      }

      id = R.id.linear2;
      LinearLayout linear2 = rootView.findViewById(id);
      if (linear2 == null) {
        break missingId;
      }

      id = R.id.linear4;
      LinearLayout linear4 = rootView.findViewById(id);
      if (linear4 == null) {
        break missingId;
      }

      id = R.id.linear5;
      LinearLayout linear5 = rootView.findViewById(id);
      if (linear5 == null) {
        break missingId;
      }

      id = R.id.linear6;
      LinearLayout linear6 = rootView.findViewById(id);
      if (linear6 == null) {
        break missingId;
      }

      id = R.id.linear7;
      LinearLayout linear7 = rootView.findViewById(id);
      if (linear7 == null) {
        break missingId;
      }

      id = R.id.linear8;
      LinearLayout linear8 = rootView.findViewById(id);
      if (linear8 == null) {
        break missingId;
      }

      id = R.id.linear9;
      LinearLayout linear9 = rootView.findViewById(id);
      if (linear9 == null) {
        break missingId;
      }

      id = R.id.loanexpandableLayout;
      ConstraintLayout loanexpandableLayout = rootView.findViewById(id);
      if (loanexpandableLayout == null) {
        break missingId;
      }

      id = R.id.loanmore;
      RelativeLayout loanmore = rootView.findViewById(id);
      if (loanmore == null) {
        break missingId;
      }

      id = R.id.textLoanNo;
      TextView textLoanNo = rootView.findViewById(id);
      if (textLoanNo == null) {
        break missingId;
      }

      id = R.id.topicLoanAmount;
      TextView topicLoanAmount = rootView.findViewById(id);
      if (topicLoanAmount == null) {
        break missingId;
      }

      id = R.id.topicLoanDue;
      TextView topicLoanDue = rootView.findViewById(id);
      if (topicLoanDue == null) {
        break missingId;
      }

      id = R.id.topicLoanInstallment;
      TextView topicLoanInstallment = rootView.findViewById(id);
      if (topicLoanInstallment == null) {
        break missingId;
      }

      id = R.id.topicLoanLastPayDate;
      TextView topicLoanLastPayDate = rootView.findViewById(id);
      if (topicLoanLastPayDate == null) {
        break missingId;
      }

      id = R.id.topicLoanLastPayment;
      TextView topicLoanLastPayment = rootView.findViewById(id);
      if (topicLoanLastPayment == null) {
        break missingId;
      }

      id = R.id.topicLoanMaturity;
      TextView topicLoanMaturity = rootView.findViewById(id);
      if (topicLoanMaturity == null) {
        break missingId;
      }

      id = R.id.topicLoanNo;
      TextView topicLoanNo = rootView.findViewById(id);
      if (topicLoanNo == null) {
        break missingId;
      }

      id = R.id.topicLoanOutstanding;
      TextView topicLoanOutstanding = rootView.findViewById(id);
      if (topicLoanOutstanding == null) {
        break missingId;
      }

      id = R.id.valueLoanInstallment;
      TextView valueLoanInstallment = rootView.findViewById(id);
      if (valueLoanInstallment == null) {
        break missingId;
      }

      id = R.id.valueLoanLastPayDate;
      TextView valueLoanLastPayDate = rootView.findViewById(id);
      if (valueLoanLastPayDate == null) {
        break missingId;
      }

      id = R.id.valueLoanLastPayment;
      TextView valueLoanLastPayment = rootView.findViewById(id);
      if (valueLoanLastPayment == null) {
        break missingId;
      }

      id = R.id.valueLoanMaturity;
      TextView valueLoanMaturity = rootView.findViewById(id);
      if (valueLoanMaturity == null) {
        break missingId;
      }

      id = R.id.valueLoanOutstanding;
      TextView valueLoanOutstanding = rootView.findViewById(id);
      if (valueLoanOutstanding == null) {
        break missingId;
      }

      id = R.id.valueloanAmount;
      TextView valueloanAmount = rootView.findViewById(id);
      if (valueloanAmount == null) {
        break missingId;
      }

      id = R.id.valueloanDue;
      TextView valueloanDue = rootView.findViewById(id);
      if (valueloanDue == null) {
        break missingId;
      }

      return new LoanListBinding((LinearLayout) rootView, linear1, linear2, linear4, linear5,
          linear6, linear7, linear8, linear9, loanexpandableLayout, loanmore, textLoanNo,
          topicLoanAmount, topicLoanDue, topicLoanInstallment, topicLoanLastPayDate,
          topicLoanLastPayment, topicLoanMaturity, topicLoanNo, topicLoanOutstanding,
          valueLoanInstallment, valueLoanLastPayDate, valueLoanLastPayment, valueLoanMaturity,
          valueLoanOutstanding, valueloanAmount, valueloanDue);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
