// Generated by view binder compiler. Do not edit!
package com.fintrex.fintrexfinance.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.fintrex.fintrexfinance.R;
import com.google.android.material.appbar.MaterialToolbar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLeasingScreenBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final CardView leaseNoDataCard;

  @NonNull
  public final ImageView leaseback;

  @NonNull
  public final ImageView menu;

  @NonNull
  public final RecyclerView recyclerview;

  @NonNull
  public final MaterialToolbar toolbar;

  private ActivityLeasingScreenBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView imageView2, @NonNull CardView leaseNoDataCard,
      @NonNull ImageView leaseback, @NonNull ImageView menu, @NonNull RecyclerView recyclerview,
      @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.imageView2 = imageView2;
    this.leaseNoDataCard = leaseNoDataCard;
    this.leaseback = leaseback;
    this.menu = menu;
    this.recyclerview = recyclerview;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLeasingScreenBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLeasingScreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_leasing_screen, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLeasingScreenBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageView2;
      ImageView imageView2 = rootView.findViewById(id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.leaseNoDataCard;
      CardView leaseNoDataCard = rootView.findViewById(id);
      if (leaseNoDataCard == null) {
        break missingId;
      }

      id = R.id.leaseback;
      ImageView leaseback = rootView.findViewById(id);
      if (leaseback == null) {
        break missingId;
      }

      id = R.id.menu;
      ImageView menu = rootView.findViewById(id);
      if (menu == null) {
        break missingId;
      }

      id = R.id.recyclerview;
      RecyclerView recyclerview = rootView.findViewById(id);
      if (recyclerview == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = rootView.findViewById(id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityLeasingScreenBinding((ConstraintLayout) rootView, imageView2,
          leaseNoDataCard, leaseback, menu, recyclerview, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
