// Generated by view binder compiler. Do not edit!
package com.fintrex.fintrexfinance.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.fintrex.fintrexfinance.R;
import com.google.android.material.appbar.MaterialToolbar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTermsConditionsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView address;

  @NonNull
  public final ImageView externalTermsback;

  @NonNull
  public final TextView general;

  @NonNull
  public final ConstraintLayout linearLayout;

  @NonNull
  public final ImageView menu;

  @NonNull
  public final MaterialToolbar termstoolbar;

  private ActivityTermsConditionsBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView address, @NonNull ImageView externalTermsback, @NonNull TextView general,
      @NonNull ConstraintLayout linearLayout, @NonNull ImageView menu,
      @NonNull MaterialToolbar termstoolbar) {
    this.rootView = rootView;
    this.address = address;
    this.externalTermsback = externalTermsback;
    this.general = general;
    this.linearLayout = linearLayout;
    this.menu = menu;
    this.termstoolbar = termstoolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTermsConditionsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTermsConditionsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_terms_conditions, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTermsConditionsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.address;
      ImageView address = rootView.findViewById(id);
      if (address == null) {
        break missingId;
      }

      id = R.id.externalTermsback;
      ImageView externalTermsback = rootView.findViewById(id);
      if (externalTermsback == null) {
        break missingId;
      }

      id = R.id.general;
      TextView general = rootView.findViewById(id);
      if (general == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      ConstraintLayout linearLayout = rootView.findViewById(id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.menu;
      ImageView menu = rootView.findViewById(id);
      if (menu == null) {
        break missingId;
      }

      id = R.id.termstoolbar;
      MaterialToolbar termstoolbar = rootView.findViewById(id);
      if (termstoolbar == null) {
        break missingId;
      }

      return new ActivityTermsConditionsBinding((ConstraintLayout) rootView, address,
          externalTermsback, general, linearLayout, menu, termstoolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
